<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tony的笔记</title><link>https://chaoswong1981.github.io/</link><description>Recent content on Tony的笔记</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 27 Feb 2022 20:37:51 +0800</lastBuildDate><atom:link href="https://chaoswong1981.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>比较通用的创建python扩展的方法</title><link>https://chaoswong1981.github.io/posts/%E6%AF%94%E8%BE%83%E9%80%9A%E7%94%A8%E7%9A%84%E5%88%9B%E5%BB%BApython%E6%89%A9%E5%B1%95%E7%9A%84%E6%96%B9%E6%B3%95/</link><pubDate>Sun, 27 Feb 2022 20:37:51 +0800</pubDate><guid>https://chaoswong1981.github.io/posts/%E6%AF%94%E8%BE%83%E9%80%9A%E7%94%A8%E7%9A%84%E5%88%9B%E5%BB%BApython%E6%89%A9%E5%B1%95%E7%9A%84%E6%96%B9%E6%B3%95/</guid><description>1. 创建c文件 #include &amp;#34;python.h&amp;#34;#include &amp;#34;stdio.h&amp;#34; static PyObject *testmod(PyObject *self, PyObject *args) { printf(&amp;#34;this is c function &amp;#39;testmod&amp;#39;\n&amp;#34;); return PyLong_FromLong(0); } static PyMethodDef mymod_funcs[] = { {&amp;#34;testmod&amp;#34;, testmod, METH_NOARGS, &amp;#34;testmod function.&amp;#34;}, {0,0,0,0} }; static PyModuleDef mymod_module = { PyModuleDef_HEAD_INIT, &amp;#34;mymod&amp;#34;, &amp;#34;mymod is first module test&amp;#34;, -1, mymod_funcs }; PyMODINIT_FUNC PyInit_mymod(void) { printf(&amp;#34;PyInit_mymod\n&amp;#34;); return PyModule_Create(&amp;amp;mymod_module); } 2. 创建setup.py from distutils.core import * setup( name=&amp;#34;mymod&amp;#34;, version=&amp;#34;1.0&amp;#34;, ext_modules=[Extension(&amp;#34;mymod&amp;#34;, [&amp;#34;mymod.c&amp;#34;])] ) 3. 生成扩展 python setup.py build 4.</description></item><item><title>开篇-Hugo基本使用</title><link>https://chaoswong1981.github.io/posts/%E5%BC%80%E7%AF%87-hugo%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</link><pubDate>Sat, 19 Feb 2022 17:53:14 +0800</pubDate><guid>https://chaoswong1981.github.io/posts/%E5%BC%80%E7%AF%87-hugo%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8/</guid><description>网上讲hugo怎么用的着实很多了，所以我只记录自己第一次折腾hugo的步骤。
0x0. 准备工作 在github上建一个这样的仓库：.github.io 把仓库clone到本地 cd到仓库里 0x1. hugo部分 创建hugo基本文件
hugo new site . --force 换个主题
本博客用的是paper，在这下载，看名字还是位国人哦，怪不得觉得这个主题比老外的要顺眼 直接下zip就行，然后解压出来，放到theme里的paper文件夹 修改根目录下的config.toml文件，在最后加上如下的部分： theme = 'paper' 随便创建一篇草稿，再随便写点东西（比如本篇）
hugo new posts/开篇-hugo基本使用.md 预览看看
hugo server -D 在浏览器里打开提示的网址，我这儿是 http://localhost:1313 应该就能看到了。 此时可以随便改你的站点，保存后浏览器会自动刷新，很方便。
生成
hugo -D 然后你就能在 public 文件夹里看到生成的页面了。
按官方文档走的话，会注意到 md 开头有个 traft: true，这表示本篇文章是篇草稿，按hugo的逻辑，草稿是不会被部署上去的。
这个我试了下，如果没把traft改成false的话，最后部署到github上时是不会显示的。
0x2. github部署 接着折腾，把这个博客搞到github托管上去。
在根目录新建 .</description></item></channel></rss>